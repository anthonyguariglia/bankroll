{"version":3,"sources":["context/context.js","context/action-types.js","context/reducer.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/Main/Search.js","api/lists.js","api/stocks.js","components/Main/Graph.js","components/Main/GetData.js","components/Main/StockBar.js","components/Main/StockNav.js","components/Main/Homepage.js","App.js","index.js"],"names":["AppContext","createContext","SET_USERNAME","SET_USER_ID","SET_TOKEN","SET_SIGNEDIN","SAVE_STATE","SET_CURRENT_STOCK","SET_LISTS","SET_CURRENT_LIST","ALL_TYPES","state","action","type","payload","userName","userId","token","loggedIn","currentStock","name","ticker","shouldSaveState","lists","currentList","authenticatedOptions","className","to","unauthenticatedOptions","Header","user","useContext","dispatch","Navbar","bg","variant","expand","Brand","style","color","textDecoration","Nav","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","username","password","SignUp","history","useHistory","useState","email","setEmail","setUsername","setPassword","passConfirm","setPassConfirm","onSignUp","e","a","preventDefault","apiObj","passwordConfirmation","password_confirmation","then","res","toast","push","catch","error","message","Form","onSubmit","Group","Label","Control","required","value","placeholder","onChange","target","Button","SignIn","event","success","id","accessToken","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","controlId","SignOut","useEffect","clearInterval","intervalId","roomIntervalId","headers","signOut","finally","forEach","ChangePassword","closeModal","oldPassword","setOldPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","changePassword","response","controllId","Search","finnhubClient","stocks","setStocks","customStyles","option","provided","isSelected","padding","control","width","singleValue","opacity","isDisabled","transition","cacheOptions","symbolSearch","searchResults","result","slice","upperLim","length","responseObject","i","description","symbol","includes","indexOf","responseStock","filter","stock","err","options","getOptionValue","getOptionLabel","styles","createList","deleteList","getAllLists","createStock","listId","removeStock","stockId","Graph","dataMin","dataMax","showOpen","percentChange","upperLimit","openPrice","AreaChart","innerWidth","height","margin","top","right","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","YAxis","domain","Legend","Area","stroke","fillOpacity","fill","dot","legend","GetData","nameOfStock","setData","setStock","setDataMin","setDataMax","timeRange","setTimeRange","frequency","setFrequency","marketOpen","setMarketOpen","now","setNow","setShowOpen","Date","dateFormat","getTime","currentPrice","quote","incoming","pc","dp","toFixed","setTimeout","getStockData","price","stockCandles","Math","floor","open","c","openDataset","t","dataSet","dataPoint","dataObj","min","max","setRange","parseInt","addToList","apiListData","list","stockResponse","newList","onClick","OverlayTrigger","placement","delay","show","overlay","props","text","Tooltip","renderTooltip","src","StockBar","socketData","setSocketData","stockPriceData","stockChangeData","unsubscribe","socket","send","JSON","stringify","WebSocket","addEventListener","parse","map","close","change","handleClick","stockToDisplay","handleRemoveStock","listData","current","stockToRemove","StockNav","addList","setAddList","listName","setListName","handleSubmit","handleDelete","Container","finnhub","require","ApiClient","instance","authentications","apiKey","DefaultApi","Homepage","listResponse","fluid","Row","initialState","App","useReducer","reducer","Provider","path","component","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.098dccad.chunk.js","sourcesContent":["/* eslint-disable */\nimport { createContext } from 'react'\n\nconst AppContext = createContext()\n\nexport default AppContext\n","/* eslint-disable */\nexport const SET_USERNAME = 'SET_USERNAME'\nexport const SET_USER_ID = 'SET_USER_ID'\nexport const SET_TOKEN = 'SET_TOKEN'\nexport const SET_SIGNEDIN = 'SET_SIGNEDIN'\nexport const SAVE_STATE = 'SET_STATE'\nexport const SET_CURRENT_STOCK = 'SET_CURRENT_STOCK'\nexport const SET_LISTS = 'SET_LISTS'\nexport const SET_CURRENT_LIST = 'SET_CURRENT_LIST'\n\n\n// don't include in ALL_TYPES\nexport const ADD_CACHE = 'ADD_CACHE'\n\nexport const ALL_TYPES = [\n  SET_USERNAME,\n  SET_USER_ID,\n  SET_TOKEN,\n  SET_SIGNEDIN,\n  SAVE_STATE,\n  SET_CURRENT_STOCK,\n  SET_LISTS,\n  SET_CURRENT_LIST\n]\n","/* eslint-disable */\nimport {\n  SET_USERNAME,\n  SET_USER_ID,\n  SET_TOKEN,\n  SET_SIGNEDIN,\n  SAVE_STATE,\n  SET_CURRENT_STOCK,\n  SET_LISTS,\n  SET_CURRENT_LIST\n} from './action-types'\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_USERNAME:\n      return action.payload === null\n        ? {...state, userName: null}\n        : {...state, userName: action.payload}\n    case SET_USER_ID:\n      return action.payload === null\n        ? {...state, userId: null}\n        : {...state, userId: action.payload}\n    case SET_TOKEN:\n      return action.payload === null\n        ? {...state, token: null}\n        : {...state, token: action.payload}\n    case SET_SIGNEDIN:\n      return action.payload === null\n        ? {...state, loggedIn: false}\n        : {...state, loggedIn: action.payload}\n    case SET_CURRENT_STOCK:\n      return action.payload === null\n        ? {...state, currentStock: {\n          name: 'Tesla',\n          ticker: 'TSLA'\n        }}\n        : {...state, currentStock: action.payload}\n    case SAVE_STATE:\n      return action.payload === null\n        ? {...state, shouldSaveState: false}\n        : {...state, shouldSaveState: action.payload}\n    case SET_LISTS:\n      return action.payload === null\n        ? {...state, lists: null}\n        : {...state, lists: action.payload}\n    case SET_CURRENT_LIST:\n      return action.payload === null\n        ? {...state, currentList: null}\n        : {...state, currentList: action.payload}\n    default: \n      return state \n  }\n}","/* eslint-disable */\nimport React, { Fragment, useContext } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\nimport AppContext from '../../context/context'\n\n\n\nconst authenticatedOptions = (\n  <section className='options'>\n    <NavLink to='/home' className='nav-link'>Home</NavLink>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </section>\n)\n\nconst unauthenticatedOptions = (\n  <section className='options'>\n    <NavLink to='/sign-in' className='link login nav-link'>\n      Sign In\n    </NavLink>\n    <NavLink to='/sign-up' className='link register nav-link'>\n      Sign Up\n    </NavLink>\n  </section>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/home' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => {\n  const { state, dispatch } = useContext(AppContext)\n  const { userName, loggedIn } = state\n\n  return (\n    <Navbar bg='success' variant='dark' expand='md'>\n      <Navbar.Brand>\n        <Link to='/home' style={{ color: '#FFF', textDecoration: 'none' }}><span className='website-title'>BankRoll</span></Link>\n      </Navbar.Brand>\n      <section className='navbar-auth-links'>\n        <Nav className='ml-auto'>\n          {loggedIn && (\n            <span className='navbar-text mr-2'><span className='navbar-welcome-text'>Welcome, {userName}</span></span>\n          )}\n          {/* {alwaysOptions} */}\n          {loggedIn ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </section>\n    </Navbar>\n  )\n}\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://fathomless-wave-79069.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  // console.log(credentials)\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/signup/',\n    data: {\n      email: credentials.email,\n      username: credentials.username,\n      password: credentials.password,\n      password_confirmation: credentials.passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/signin/',\n    method: 'POST',\n    data: {\n      username: credentials.username,\n      password: credentials.password\n    }\n  })\n}\n\nexport const signOut = (token) => {\n  return axios({\n    url: apiUrl + '/signout/',\n    method: 'DELETE',\n    headers: {\n      'x-access-token': token\n    }\n  })\n}\n\nexport const changePassword = (token, username, oldPassword, newPassword, confirmPassword) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      'x-access-token': token\n    },\n    data: {\n      username: username,\n      password: oldPassword,\n      newPassword: newPassword,\n      confirmPassword: confirmPassword\n    }\n  })\n}\n","/* eslint-disable */\nimport React, { useState, useContext, createRef } from 'react'\nimport { Redirect, withRouter } from 'react-router-dom'\nimport AppContext from '../../context/context'\nimport { SET_TOKEN, SET_USER_ID, SET_USERNAME } from '../../context/action-types'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport { signUp, signIn, uploadPfp } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n// const imgConfig = {\n// \tquality: 0.2,\n// \tmaxWidth: 800,\n// \tmaxHeight: 600,\n// \tautoRotate: true,\n// }\n\nconst SignUp = () => {\n    const { state, dispatch } = useContext(AppContext)\n    const { loggedIn } = state\n    const history = useHistory()\n    const [email, setEmail] = useState('')\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [passConfirm, setPassConfirm] = useState('')\n    // const imageRef = createRef()\n\n    const onSignUp = async (e) => {\n      e.preventDefault()\n\n      // const file = imageRef.current.files[0]\n      // const type = file.name.split('.').pop()\n\n      const apiObj = {\n          email: email,\n          username: username,\n          password: password,\n          passwordConfirmation: passConfirm,\n      }\n      signUp(apiObj)\n          .then(() => signIn(apiObj))\n          .then((res) => {\n\t\t\t\t\t\t\t// console.log(res)\n              // uploadPfp(imageRef.current.files[0], res.data.user.userName)\n              dispatch({\n                  type: SET_USERNAME,\n                  payload: res.data.username\n              })\n          })\n          .then(() =>{\n              toast(`User ${username} successfully created!`, {type: 'success'})\n\t\t\t\t\t\t\t// console.log('here')\n          })\n          .then(() => history.push('/sign-in'))\n          .catch((error, message) => {\n\t\t\t\t\t\t\t// console.log(String(error))\n\t\t\t\t\t\t\ttoast.error('Unable to sign up, please check credentials and try again')\n              setPassword('')\n              setPassConfirm('')\n              // toast error here\n          })\n      }\n\n    return loggedIn ? (\n\t\t\t<Redirect to='/' />\n\t\t) : (\n\t\t\t<div className='row signin-parent-wrapper'>\n\t\t\t\t<div className='signin-form-wrapper'>\n\t\t\t\t\t<h3 className='signin-header3'>Sign Up</h3>\n\t\t\t\t\t<Form className='signup-form' onSubmit={onSignUp}>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Email address</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tclassName='username'\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tplaceholder='Enter email'\n\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Username</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tclassName='username'\n\t\t\t\t\t\t\t\ttype='username'\n\t\t\t\t\t\t\t\tname='username'\n\t\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\t\tplaceholder='Enter username'\n\t\t\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tclassName='username'\n\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tplaceholder='Password'\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Password Confirmation</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\tclassName='username'\n\t\t\t\t\t\t\t\tname='passwordConfirmation'\n\t\t\t\t\t\t\t\tvalue={passConfirm}\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tplaceholder='Confirm Password'\n\t\t\t\t\t\t\t\tonChange={(e) => setPassConfirm(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t{/* <Form.Group>\n\t\t\t\t\t\t\t<Form.Label>Profile Picture</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='file'\n\t\t\t\t\t\t\t\tname='image'\n\t\t\t\t\t\t\t\tid='imagePicker'\n\t\t\t\t\t\t\t\taccept='image/*'\n\t\t\t\t\t\t\t\tmultiple={false}\n\t\t\t\t\t\t\t\t//onChange={(e) => imagePicker(e)}\n\t\t\t\t\t\t\t\tref={imageRef}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group> */}\n\t\t\t\t\t\t<Button variant='success' type='submit' className='submit'>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n}\n\nexport default SignUp\n","/* eslint-disable */\nimport React, { useContext, useState } from 'react'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport AppContext from '../../context/context'\n\nimport { toast, ToastContainer } from 'react-toastify'\nimport { SET_TOKEN, SET_USER_ID, SET_SIGNEDIN, SET_USERNAME } from '../../context/action-types'\nimport { signIn } from '../../api/auth'\nimport { Form, Button } from 'react-bootstrap'\n\n\nconst SignIn = () => {\n    const { state, dispatch } = useContext(AppContext)\n    const { loggedIn } = state\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    const onSignIn = (event) => {\n      event.preventDefault()\n\n      const signInObj = {\n          username: username,\n          password: password\n      }\n\n      signIn(signInObj)\n        .then((res) => {\n            // console.log('login response: ', res)\n            // console.log(res.data, 'state: ', state)\n            toast.success(`${username} successfully signed in!`)\n            dispatch({\n                type: SET_USER_ID,\n                payload: res.data.id\n            })\n            dispatch({\n                type: SET_TOKEN,\n                payload: res.data.accessToken\n            })\n            dispatch({\n                type: SET_SIGNEDIN,\n                payload: true\n            })\n            dispatch({\n                type: SET_USERNAME,\n                payload: res.data.username\n            })\n        })\n        // .then(() =>{\n        //   // toast alert here\n        // })\n        // .then(() => history.push('/'))\n        .catch((error) => {\n          // console.log(error)\n          // setUsername('')\n          // setPassword('')\n          //error toast here\n          toast.error('Incorrect Username or Password', {\n            position: \"bottom-center\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            })\n        })\n    }\n\n\n  return (\n      loggedIn ? <Redirect to='/home' /> :\n    <div className='row signin-parent-wrapper'>\n      <div className='signin-form-wrapper'>\n        <h3 className=\"signin-header3\">Login</h3>\n        <Form onSubmit={onSignIn} className=\"signin-form\">\n          <Form.Group controlId='username'>\n            <Form.Label className=\"label-username\">Username</Form.Label>\n            <Form.Control\n              required\n              className='username'\n              type='username'\n              name='username'\n              value={username}\n              placeholder='Enter Username'\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              className='username'\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Enter Password'\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Button variant='success' type='submit' className='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","/* eslint-disable */\nimport { useContext, useEffect } from 'react'\nimport { useHistory, Redirect } from 'react-router-dom'\nimport AppContext from '../../context/context'\nimport { ALL_TYPES } from '../../context/action-types'\nimport { signOut } from '../../api/auth'\nimport { toast } from 'react-toastify'\n\n\nconst SignOut = () => {\n  const { state, dispatch } = useContext(AppContext)\n  const history = useHistory()\n  const { loggedIn, token } = state\n\n  useEffect(() => {\n    clearInterval(window.intervalId)\n    clearInterval(window.roomIntervalId)\n    if (!loggedIn) {\n        return\n    }\n    signOut(token)\n      .then((res) => {\n          // success toast here\n          // console.log(res)\n          toast.success(res.data)\n      })\n      .finally(() => {\n        ALL_TYPES.forEach((type) => {\n          //console.log(type)\n          dispatch({\n            type: type,\n            payload: null,\n          })\n        })\n      })\n      .finally(() => history.push('/'))\n  }, [])\n\n  return !loggedIn ? <Redirect to='/sign-in' /> : null\n}\n\nexport default SignOut\n","/* eslint-disable */\nimport React, { useState, useContext } from 'react'\nimport AppContext from '../../context/context'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport { toast } from 'react-toastify'\n\nimport { changePassword } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({closeModal}) => {\n  const {state, dispatch} = useContext(AppContext)\n  const history = useHistory()\n  const { loggedIn, token, userName } = state\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n  const onChangePassword = (e) => {\n    e.preventDefault()\n    changePassword(token, userName, oldPassword, newPassword, confirmPassword)\n      .then((response) =>{\n        toast.success('Successfully changed password')\n      })\n      .then(() => history.push('/home'))\n      .catch((error) => {\n        setNewPassword('')\n        setOldPassword('')\n\n        toast.error('Failed to change password')\n      })\n  }\n\n  return (\n    !loggedIn ? <Redirect to='/' /> :\n    <div className='row signin-parent-wrapper '>\n      <div className='signin-form-wrapper'>\n        <h3 className=\"signin-header3\">Change Password</h3>\n        <Form className=\"changePass-form\" onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n            required\n            className='username'\n            name='oldPassword'\n            value={oldPassword}\n            type='password'\n            placeholder='Old Password'\n            onChange={(e) => setOldPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n            required\n            className='username'\n            name='newPassword'\n            value={newPassword}\n            type='password'\n            placeholder='New Password'\n            onChange={(e) => setNewPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controllId='confirmPassword'>\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n            required\n            className='username'\n            name='confirmPassword'\n            value={confirmPassword}\n            type='password'\n            placeholder='Confirm Password'\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Form.Group>\n          <Button variant='success' type='submit' className='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","/* eslint-disable */\nimport react, { useState, useEffect, useContext } from 'react'\nimport Creatable, { useCreatable } from 'react-select/creatable'\nimport debounce from 'lodash.debounce'\nimport AppContext from '../../context/context'\nimport { SET_CURRENT_STOCK } from '../../context/action-types'\nimport { toast } from 'react-toastify'\n\nconst Search = ({ finnhubClient} ) => {\n  const { state, dispatch, lists } = useContext(AppContext)\n  const { currentStock } = state\n  const [text, setText] = useState('')\n  const [stocks, setStocks] = useState([])\n\n  // Styling for search bar\n  const customStyles = {\n    option: (provided, state) => ({\n      ...provided,\n      color: state.isSelected ? 'white' : 'grey',\n      padding: 10,\n    }),\n    control: () => ({\n      // none of react-select's styles are passed to <Control />\n      width: 200,\n    }),\n    singleValue: (provided, state) => {\n      const opacity = state.isDisabled ? 0.5 : 1;\n      const transition = 'opacity 300ms';\n  \n      return { ...provided, opacity, transition };\n    }\n  }\n\n  // when a stock is searched\n  const handleSubmit = (e) => {\n    try {\n      // make a call to the finnhub api to look for the desired stock\n      finnhubClient.symbolSearch(e.value, (error, data, response) => {\n        // if we get a response\n        if (data) {\n          // condense search to the top 3 results\n          const searchResults = data.result.slice(0, 3)\n          const upperLim = searchResults.length < 3 ? 3 : searchResults.length\n          let responseObject = []\n\n          // clean up response data, trim everything after the period\n          for (let i = 0; i < upperLim; i++) {\n            const description = searchResults[`${i}`].description\n            let symbol = searchResults[`${i}`].symbol\n\n            if (symbol.includes('.')) {\n              symbol = symbol.slice(0, symbol.indexOf('.'))\n            }\n            responseObject.push({ value: symbol, name: `${description}`})\n          }\n\n          // package up response data\n          const responseStock = {\n            ticker: responseObject[0].value,\n            name: responseObject[1].name\n          }\n\n          // set the current stock to the search result\n          dispatch({\n            type: SET_CURRENT_STOCK,\n            payload: responseStock\n          })\n\n          // if this is a new stock, add it to the list\n          if (stocks.filter(stock => stock.value === responseObject[0].value).length === 0) {\n            setStocks([ { value: responseObject[0].value }, ...stocks ])\n          }\n\n          return responseObject\n        }\n        \n      }) \n    } catch (err) {\n      // toast error here\n      toast.error('An error occured, please try again')\n    }\n  }\n\n  return (\n    <>  \n      <section className='search-bar' >\n        <Creatable \n          cacheOptions\n          onChange={handleSubmit}\n          options={stocks}\n          getOptionValue={(option) => option.value}\n          getOptionLabel={(option) => option.value}\n          styles={customStyles}\n          placeholder='Search for a stock...'\n        />\n      </section>\n    </>\n  )\n}\n\nexport default Search\n","import axios from 'axios'\nimport apiUrl from '../apiConfig'\n\nexport const createList = (token, name) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/user/lists',\n    headers: {\n      'x-access-token': token\n    },\n    data: {\n      name: name\n    }\n  })\n}\n\nexport const deleteList = (token, name) => {\n  return axios({\n    method: 'DELETE',\n    url: apiUrl + '/user/lists/' + name,\n    headers: {\n      'x-access-token': token\n    }\n  })\n}\n\nexport const getAllLists = (token) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/user/lists',\n    headers: {\n      'x-access-token': token\n    }\n  })\n}\n","/* eslint-disable */\nimport axios from 'axios'\nimport apiUrl from '../apiConfig'\n\nexport const createStock = (token, name, ticker, listId, ) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/user/stocks',\n    headers: {\n      'x-access-token': token\n    },\n    data: {\n      name: name,\n      ticker: ticker,\n      listId: listId\n    }\n  })\n}\n\nexport const getAllStocks = (token) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/user/stocks',\n    headers: {\n      'x-access-token': token\n    }\n  })\n}\n\nexport const removeStock = (token, listId, stockId) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + '/user/stocks',\n    headers: {\n      'x-access-token': token\n    },\n    data: {\n      listId: listId,\n      stockId: stockId\n    }\n  })\n}\n","/* eslint-disable */\nimport React, { useState, useEffect, useContext } from 'react'\nimport { AreaChart, Area, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'\n\nconst Graph = ({ stock, data, dataMin, dataMax, showOpen, percentChange }) => {\n\n  // Calculate upper limit for y-axis\n  const upperLimit = stock.openPrice > dataMax ? 1.01 * stock.openPrice : dataMax\n\n  return (\n      <AreaChart width={0.45 * window.innerWidth} height={0.18 * window.innerWidth} data={data}\n        margin={{ top: 50, right: 30, left: 20, bottom: 5 }}>\n        <defs>\n          <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n          <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n          <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n          </linearGradient>\n          <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n          <stop offset=\"5%\" stopColor={percentChange > 0 ? \"#82ca9d\" : \"#ca8282\"} stopOpacity={0.8}/>\n          <stop offset=\"95%\" stopColor={percentChange > 0 ? \"#82ca9d\" : \"#ca8282\"} stopOpacity={0}/>\n          </linearGradient>\n        </defs>\n        <XAxis dataKey=\"name\" name=\"Time\" />\n        <YAxis type=\"number\" domain={[dataMin, upperLimit]} />\n        <Tooltip />\n        <Legend />\n        {showOpen ? <Area type=\"monotone\" dataKey=\"open\" stroke=\"#8884d8\" fillOpacity={0} fill=\"url(#colorUv)\" dot={false} legend={false} /> : '' }\n        <Area type=\"monotone\" dataKey=\"price\" name={stock.ticker} stroke={percentChange > 0 ? \"#82ca9d\" : \"#ca8282\"} fillOpacity={1} fill=\"url(#colorPv)\" />\n      </AreaChart>\n  )\n\n}\n\nexport default Graph\n","/* eslint-disable */\nimport React, { useState, useEffect, useContext } from 'react'\nimport { Col, Tooltip, OverlayTrigger } from 'react-bootstrap'\nimport dateFormat from 'dateformat'\nimport AppContext from '../../context/context'\nimport { SET_CURRENT_STOCK, SET_CURRENT_LIST } from '../../context/action-types'\nimport { getAllLists } from '../../api/lists'\nimport { createStock } from '../../api/stocks'\nimport{ toast } from 'react-toastify'\n\nimport Graph from './Graph'\n\n// Component for data acquisition from finnhub API\nconst GetData = ({ finnhubClient, nameOfStock }) => {\n  const { state, dispatch } = useContext(AppContext)\n  const { currentStock, currentList, token } = state\n\n  // Set a base currentStock if none exists\n  if (!currentStock) {\n    dispatch({\n      type: SET_CURRENT_STOCK,\n      payload: {\n        name: 'Tesla',\n        ticker: 'TSLA'\n      }\n    })\n  }\n\n  // Otherwise pull currentStock from context\n  const { name, ticker } = currentStock\n\n  // declare state variables\n  const [data, setData] = useState(null)\n  const [stock, setStock] = useState({})\n  const [dataMin, setDataMin] = useState(0)\n  const [dataMax, setDataMax] = useState(1000)\n  const [timeRange, setTimeRange] = useState(0)\n  const [frequency, setFrequency] = useState(1)\n  const [marketOpen, setMarketOpen] = useState(null)\n  const [now, setNow] = useState(null)\n  const [showOpen, setShowOpen] = useState(1)\n\n  // set up tool tips for 'add to list'\n  const renderTooltip = (props) => {\n    const text = currentList ? 'Add to ' + currentList.name : 'Create a list!'\n    return (\n      <Tooltip id=\"button-tooltip\" {...props}>\n        <>\n          <span>{text}</span>\n        </>\n      </Tooltip>\n    )\n  }\n\n  // componentDidMount\n  useEffect(() => {\n    setNow(new Date())\n    setMarketOpen(new Date(dateFormat(now, 'yyyy.mm.dd.9:00')).getTime() / 1000)\n    setStock({ name: name, ticker: ticker, openPrice: 0, currentPrice: 0 })\n  }, [])\n\n  // update the local stock whenever the global stock changes\n  useEffect(() => {\n  if (ticker) {\n      setStock({ name: name, ticker: ticker })\n    }\n  }, [ticker])\n\n  // When a new ticker is selected, pull a quote on that ticker and trigger the data acquisition sequence\n  useEffect(() => {\n    if (stock.ticker) {\n      finnhubClient.quote(stock.ticker, (error, incoming, response) => {\n        if (incoming) {\n          setStock({ ...stock, openPrice: incoming.pc, percentChange: incoming.dp.toFixed(2) })\n        }\n      })\n    }\n  }, [stock.ticker])\n  \n  // Once the openPrice has been received, pull the latest stock data\n  useEffect(() => {\n    if (stock.openPrice) {\n      setTimeout(() => getStockData(), 100)\n    }\n  }, [stock.openPrice])\n\n  // Refresh stock history data when timeRange is changed\n  useEffect(() => {\n    if (stock.ticker) {\n      setTimeout(() => getStockData(), 100)\n    }\n\n  }, [timeRange])\n\n  // Update currentPrice of stock state variable when new data is obtained\n  useEffect(() => {\n    if (data) {\n      setStock({ ...stock, currentPrice: data[data.length - 1].price })\n    }\n  }, [data])\n\n  // Get latest stock data\n  const getStockData = (ticker) => {\n    // contact finnhub api to get candle data over specified range, at calculated frequency, for the given ticker\n    finnhubClient.stockCandles(stock.ticker ? stock.ticker : ticker, frequency, (marketOpen - (86400 * timeRange)), Math.floor(new Date().getTime() / 1000), (error, incoming, response) => {\n      if (error) {\n        toast.error('An unexpected error occurred. Please wait a few moments then try again')\n      }\n      if (stock.openPrice) {\n        // define dataset TODO: change to closedDataset\n        const open = incoming.c\n        let openDataset = [incoming.t, incoming.c]\n\n        // Create dataSet array that contains objects of name and price for graph\n        let dataSet = []\n        let i = 0\n        if (openDataset[0] !== undefined) {\n          openDataset[0].forEach(dataPoint => {\n            const date = dateFormat(new Date(dataPoint * 1000), 'm/d/yy, h:MM')\n            const dataObj = { name: date, price: openDataset[1][i].toFixed(2), open: stock.openPrice }\n            i++\n            dataSet.push(dataObj)\n          })\n      \n          // update state variables to pass to graph\n          setDataMin(Math.min(...open))\n          setDataMax(Math.max(...open))\n          setData(dataSet)\n        }\n      }\n    })\n  }\n\n  // set the time range of the graph\n  const setRange = e => {\n    if (parseInt(e.target.id)) {\n      setTimeRange(parseInt(e.target.id))\n    } else {\n      setTimeRange(e.target.id)\n    }\n    // based on the button clicked, calculate the data frequency and decide whether to show the 'opening' price\n    if (e.target.id == 0 && ((now - marketOpen) <= 14400)) {\n      setFrequency(1)\n      setShowOpen(1)\n    } else if (e.target.id == 0 && ((now - marketOpen) > 14400)) {\n      setFrequency(1)\n      setShowOpen(1)\n    } else if (e.target.id > 0 && e.target.id <= 7) {\n      setFrequency(30)\n      setShowOpen(0)\n    } else if (e.target.id > 7 && e.target.id <= 14) {\n      setFrequency(60)\n      setShowOpen(0)\n    } else {\n      setFrequency(60)\n      setShowOpen(0)\n    }\n  }\n\n  // handle when a user adds a stock to a list\n  const addToList = async e => {\n    // pull all list data from the server\n    const apiListData = await getAllLists(token)\n    \n    // filter that data to find the specific listID we need\n    const list = apiListData.data.lists.filter(list => list.name === currentList.name ? list.id : false)\n\n    // if we find a list\n    if (list) {\n      // create a stock inside of that list\n      const stockResponse = await createStock(token, currentStock.name, currentStock.ticker, list[0].id)\n\n      // handle error if the stock is already in the list\n      if (stockResponse.data === 'Stock is already in list') {\n        toast.error(stockResponse.data)\n      } else {\n        // if not, pull all list data again to update nav list\n        const apiListData = await getAllLists(token)\n\n        // filter that data for our specific list\n        const newList = apiListData.data.lists.filter(list => list.name === currentList.name ? list.id : false)\n        \n        // update context to reflect new list data\n        dispatch({\n          type: SET_CURRENT_LIST,\n          payload: newList[0]\n        })\n\n        // report result to the user\n        toast.success('Stock successfully added to list')\n      }\n    }\n  }\n  \n  return (\n    <>\n      <h2 className='stock-name'>{name + ' (' + ticker + ')'}</h2>\n      <h3 className='stock-price'>{'$' + stock.currentPrice}</h3>\n      {/* Add stock to list button */}\n      <span className='stock-price-and-button' onClick={addToList}>\n        <h5 className='stock-percent-change'>{stock.percentChange > 0 ? '+' + stock.percentChange + '% today' : stock.percentChange + '% today'}</h5>\n          {/* Tooltip */}\n          <OverlayTrigger\n            placement=\"top\"\n            delay={{ show: 25 }}\n            overlay={renderTooltip()} >\n            <button className='stock-add-button'><img className='stock-add-to-list' src='https://icongr.am/clarity/add-text.svg?size=24' /></button>\n          </OverlayTrigger>\n        {/* <span className='stock-add-text'>Add to {currentList ? currentList.name : 'current list'}</span> */}\n\n      </span>\n      {/* Stock Graph */}\n      <div className='graph-wrapper' >            \n        {stock.openPrice ? <Graph data={data} stock={stock} dataMin={dataMin} dataMax={dataMax} showOpen={showOpen} percentChange={stock.percentChange} />  : ''}\n      </div>\n      {/* Date Range */}\n      <section className='date-range-wrapper'>\n        <button className='date-range-button' id='0' onClick={setRange}>1D</button>\n        <button className='date-range-button' id='7' onClick={setRange}>1W</button>\n        <button className='date-range-button' id='14' onClick={setRange}>2W</button>\n        <button className='date-range-button' id='30' onClick={setRange}>1M</button>\n      </section>\n    </>\n  )\n}\n\nexport default GetData","/* eslint-disable */\nimport react, { useState, useEffect, useContext } from 'react'\nimport AppContext from '../../context/context'\nimport { SET_CURRENT_LIST, SET_CURRENT_STOCK } from '../../context/action-types'\nimport { removeStock, getAllStocks } from '../../api/stocks'\nimport { getAllLists } from '../../api/lists'\nimport { toast } from 'react-toastify'\n\nconst StockBar = ({finnhubClient}) => {\n  const{ state, dispatch } = useContext(AppContext)\n  const { loggedIn, token, lists, currentList } = state\n\n  const [socketData, setSocketData] = useState(null)\n  const [stockPriceData, setStockPriceData] = useState({})\n  const [stockChangeData, setStockChangeData] = useState({})\n  const [stocks, setStocks] = useState([])\n\n  // Unsubscribe\n  const unsubscribe = (socket, symbol) => {\n    socket.send(JSON.stringify({'type':'unsubscribe','symbol': 'AAPL'}))\n    socket.send(JSON.stringify({'type':'unsubscribe', 'symbol': 'TSLA'}))\n    socket.send(JSON.stringify({'type':'unsubscribe', 'symbol': 'MSFT'}))\n  }\n\n  useEffect(async () =>  {\n\n    const socket = new WebSocket('wss://ws.finnhub.io?token=c7spe0qad3i9jn7rivng')\n\n    // Connection opened -> Subscribe\n    // console.log(socket)\n\n    // add event listeners\n    socket.addEventListener('open', function (event) {\n      setTimeout(() => socket.send(JSON.stringify({'type':'subscribe', 'symbol': 'AAPL'})), 100)\n      setTimeout(() => socket.send(JSON.stringify({'type':'subscribe', 'symbol': 'TSLA'})), 100)\n      setTimeout(() => socket.send(JSON.stringify({'type':'subscribe', 'symbol': 'MSFT'})), 100)\n    })\n\n    // Listen for messages\n    socket.addEventListener('message', function (event) {\n      setSocketData(JSON.parse(event.data).data)\n      // console.log('Message from server ', JSON.parse(event.data).data)\n    })\n\n    // Unsubscribe\n    return () => {\n      unsubscribe(socket, 'AAPL')\n    }\n  }, [])\n\n  useEffect(() => {\n    if (socketData) {\n      // console.log('socket data: ', socketData[0].s, socketData[0].p)\n    }\n  }, [socketData])\n\n  useEffect(async () => {\n    if (lists) {\n      // const stocks = lists.stocks\n      // console.log('stocks: ', lists)\n\n      // const listToDisplay = await lists.filter(list => {\n      //   return list.name === currentListName\n      // })\n      // setCurrentList(await listToDisplay[0])\n      // console.log('current list: ', await listToDisplay )\n\n    }\n\n  }, [lists])\n\n  // if the current list has changed\n  useEffect(() => {\n    // check that it's not null\n    if (currentList) {\n      // (twice)\n      if (currentList) {\n        // check if it has a stocks array (i.e. not null)\n        if (currentList.stocks) {\n          // if so, check that the array has something in it without throwing an error\n          if (currentList.stocks.length) {\n            // update the stocks variable with the new stock data\n            setStocks(currentList.stocks)\n            // grab the latest price data for each stock in the list\n            currentList.stocks.map(stock => {\n              finnhubClient.quote(stock.ticker, (error, incoming, response) => {\n                // if we receive data, update the stock bar with that new price data\n                if (incoming) {\n                    // const percentChange = incoming.dp\n                    // console.log('should be here', incoming.o, incoming.pc, incoming.dp.toFixed(2))\n                    const tick = stock.ticker\n                    const close = incoming.c.toFixed(2)\n                    const change = incoming.dp.toFixed(2)\n                    stockPriceData[`${stock.ticker}`] = close\n                    stockChangeData[`${stock.ticker}`] = change\n                }\n              })\n            })\n          } else {\n            setStocks(currentList.stocks)\n          }\n        }\n      }\n    }\n  }, [currentList])\n\n  // if a user clicks on a stock on the bar, set it to the current stock\n  const handleClick = e => {\n    if (lists) {\n      const stockToDisplay = stocks.filter(stock => stock.ticker == e.target.id)[0]\n      dispatch({\n        type: SET_CURRENT_STOCK,\n        payload: stockToDisplay\n      })\n    }\n  }\n\n  // if the user clicks the 'remove stock' button\n  const handleRemoveStock = async e => {\n    // get the ID of the list the stock is currently in\n    const listData = await getAllLists(token)\n    const current = await listData.data.lists.filter(list => list.name === currentList.name ? list.id : false)\n\n    // get the ID of the stock we wish to remove\n    const stockToRemove = await currentList.stocks.filter(stock => stock.ticker === e.target.value ? stock.id : false)\n\n    if (current[0] && stockToRemove[0]) {\n\n      // remove desired stock\n      const removed = await removeStock(token, current[0].id, stockToRemove[0].id)\n    }\n    // Update stock bar\n    const apiListData = await getAllLists(token)\n    const newList = apiListData.data.lists.filter(list => list.name === currentList.name ? list.id : false)\n    dispatch({\n        type: SET_CURRENT_LIST,\n        payload: newList[0]\n    })\n    toast.success('Successfully deleted stock from list')\n  }\n\n  return (\n    <>\n      <section className='stock-bar-wrapper'>\n        <section className='stock-bar-box'>\n          {currentList ? ( stocks.length ?  \n            stocks.map(stock => (\n                <span className='stock-bar-stock' key={stock.ticker} >\n                  <button className='stock-bar-delete-stock' onClick={handleRemoveStock} value={stock.ticker}>X</button> \n                  <h3 className='stock-bar-ticker'><button className='clickable' id={stock.ticker} onClick={handleClick} >{stock.ticker}</button></h3>\n                  <div className='stock-bar-price-pc-box'>\n                    <h6 className='stock-bar-pc'>{stockChangeData[`${stock.ticker}`] > 0 ? '+' + stockChangeData[`${stock.ticker}`] + '%' : stockChangeData[`${stock.ticker}`] + '%'}</h6>\n                    <h5 className='stock-bar-price'>{'$' + stockPriceData[`${stock.ticker}`]}</h5>\n                  </div>\n                </span>\n            ))\n          : <span className='stock-bar-message'><p>Add stocks!</p></span> ) : <span className='stock-bar-message'><p>Add stocks to a list to get started!</p></span> }\n        </section>\n      </section>\n    </>\n  )\n\n}\n\nexport default StockBar","/* eslint-disable */\nimport react, { useState, useEffect, useContext } from 'react'\nimport AppContext from '../../context/context'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { toast } from 'react-toastify'\n\nimport { SET_CURRENT_LIST, SET_LISTS } from '../../context/action-types'\nimport { getAllLists, createList, deleteList } from '../../api/lists'\n\nconst StockNav = () => {\n  const { state, dispatch } = useContext(AppContext)\n  const { loggedIn, token, lists, currentList } = state\n\n  const [addList, setAddList] = useState(false)\n  const [listName, setListName] = useState('')\n\n  // const [currentList, setCurrentList] = useState({})\n\n  /* Temporary variables - replace with API call to back end*/\n  const ticker = 'AAPL'\n  const currentPrice = '$172.50'\n\n  let listsJSX\n\n  useEffect(async () => {\n    if (lists) {\n      // const stocks = lists.stocks\n      // console.log('stocks: ', lists)\n\n      // const listToDisplay = await lists.filter(list => {\n      //   return list.name === currentListName\n      // })\n      // setCurrentList(await listToDisplay[0])\n      // console.log('current list: ', await listToDisplay )\n\n    }\n  }, [lists])\n\n  // when the user clicks on a list\n  const handleClick = async e => {\n    // pull the existing server list data \n    const apiListData = await getAllLists(token)\n\n    // match it to the list the user clicked on\n    const newList = apiListData.data.lists.filter(list => list.name === e.target.value ? list.id : false)\n    \n    // set the list globally\n    dispatch({\n      type: SET_CURRENT_LIST,\n      payload: newList[0]\n    })\n  }\n\n  // when the user adds a new list\n  const handleSubmit = async e => {\n    e.preventDefault()\n\n    // check if the list exists\n    const newList = await createList(token, listName)\n    if (newList.data === 'List already exists') {\n      return toast.error(newList.data)\n    }\n    \n    // if not, update the global list data\n    dispatch({\n      type: SET_LISTS,\n      payload: newList.data.lists\n    })\n\n    // clear the form, hide the input\n    setListName('')\n    setAddList(false)\n  }\n\n  const handleChange = e => {\n    setListName(e.target.value)\n  }\n\n  const handleAddlist = e => {\n    // toggle the input bar when the button is clicked\n    setAddList(!addList)\n  }\n\n  // when the user deletes a list\n  const handleDelete = async (e) => {\n    // delete the list\n    const newList = await deleteList(token, e)\n\n    // pull the updated list data now that the list has been removed\n    const listData = await getAllLists(token)\n    \n    // update the lists globally\n    dispatch({\n      type: SET_LISTS,\n      payload: listData.data.lists\n    })\n\n    // if this isn't the only list, set the current list to the last in the existing array\n    if (listData.data.lists.length > 1) {\n      dispatch({\n        type: SET_CURRENT_LIST,\n        payload: listData.data.lists[listData.data.lists.length - 1]\n      })\n    } else {\n      // if it is the only list, set the currentList to null\n      dispatch({\n        type: SET_CURRENT_LIST,\n        payload: null\n      })\n    }\n\n    // report to user\n    toast.success('List deleted successfully')\n  }\n\n  return (\n    <>  \n      {/* Input to create a new list */}\n      {addList ? <form onSubmit={handleSubmit} className='create-list-form'><input value={listName} onChange={handleChange} className='create-list-input' placeholder='Enter list name...'></input><button onClick={handleSubmit} className='create-list'><img src='https://icongr.am/clarity/add.svg?size=16' /></button></form> : ''}\n      <Container className='stock-nav-wrapper'>\n        <span className='stock-nav-list-header-wrapper'><h2 className='stock-nav-list-header'>Lists</h2><button className='clickable-plus' onClick={handleAddlist}>{!addList ? <img className='stock-nav-add' src='https://icongr.am/clarity/add.svg?size=24' /> : <img className='stock-nav-add' src='https://icongr.am/clarity/minus.svg?size=24' />}</button></span>\n          {/* Add lists based on context variable */}\n          {lists ? lists.map(list => (\n            <h3 className='stock-list-name' key={list.name}>\n              <button className='clickable' onClick={handleClick} value={list.name}>{list.name}</button>\n              <button className='delete-list-wrapper' onClick={() => handleDelete(list.name)} ><img className='delete-list' src='https://icongr.am/fontawesome/trash-o.svg?size=18' /></button>\n            </h3>\n          )\n        ) : '' }\n      </Container>\n      \n    </>\n  )\n}\n\nexport default StockNav","/* eslint-disable */\nimport react, { useState, useEffect, useContext } from 'react'\nimport { Redirect, useHistory } from 'react-router-dom'\nimport AppContext from '../../context/context'\n\nimport { Container, Row, Col } from 'react-bootstrap'\nimport Search from './Search'\nimport GetData from './GetData'\nimport StockBar from './StockBar'\nimport StockNav from './StockNav'\n\nimport { getAllLists } from '../../api/lists'\nimport { SET_LISTS, SET_CURRENT_LIST } from '../../context/action-types'\n\nconst finnhub = require('finnhub')\n\nconst api_key = finnhub.ApiClient.instance.authentications['api_key']\napi_key.apiKey = 'c7spe0qad3i9jn7rivng' // Replace this\nconst finnhubClient = new finnhub.DefaultApi()\n\nconst Homepage = () => {\n  const { state, dispatch } = useContext(AppContext)\n  const { loggedIn, token, lists, currentList } = state\n\n  // componentDidMount\n  useEffect(async () => {\n    if (loggedIn) {\n      const listResponse = await getAllLists(token)\n      const listData = await listResponse.data.lists.map(list => {\n        return {\n          name: list.name,\n          stocks: [ ...list.stocks ]\n        }\n      })\n      // setLists(listData)\n      dispatch({\n        type: SET_LISTS,\n        payload: listData\n      })\n    }\n  }, [])\n\n  // update current list data globally whenever it is changed locally\n  useEffect(() => {\n    if (lists) {\n      if (!currentList) {\n        dispatch({\n          type: SET_CURRENT_LIST,\n          payload: lists[0]\n        })\n      }\n    }\n    \n  }, [lists])\n\n  return (\n    loggedIn ? \n    <Container fluid>\n      <Row>\n        <StockBar className='stock-bar' finnhubClient={finnhubClient} />\n      </Row>\n      <Row className='graph-content'>\n        <div className='graph-content-wrapper'>\n          <div className='get-data-col'>\n            <GetData finnhubClient={finnhubClient} />\n          </div>\n          <div className='stock-nav-col'>\n            <Search className='search-bar' finnhubClient={finnhubClient}/>\n            <StockNav className='stock-nav'  />\n          </div>\n        </div>\n      </Row>\n    </Container> : ''\n  )\n}\n\nexport default Homepage\n","/* eslint-disable */\nimport React, { Component, Fragment, useReducer } from 'react'\nimport AppContext from './context/context'\nimport reducer from './context/reducer'\nimport { Route } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { v4 as uuid } from 'uuid'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\nimport Homepage from './components/Main/Homepage'\n\n\nconst initialState = {\n  loggedIn: false,\n  userId: null,\n  userName: null,\n  token: null,\n  currentStock: {\n    name: 'Tesla',\n    ticker: 'TSLA'\n  },\n  lists: null,\n  currentList: null\n}\n\nconst App = () => {\n\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <AppContext.Provider value={{ state, dispatch }}>\n      <ToastContainer \n        position=\"bottom-right\"\n        autoClose={1000}\n        hideProgressBar={true}/>\n      <Header />\n      <main className='container-fluid'>\n        <Route path='/sign-up' component={SignUp} />\n        <Route path='/sign-in' component={SignIn} />\n        <Route path='/sign-out' component={SignOut} />\n        <Route path='/change-password' component={ChangePassword} />\n        <Route path='/home' component={Homepage}/>\n      </main>\n    </AppContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}